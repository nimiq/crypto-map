import { DefineWorkflow, Schema } from 'deno-slack-sdk/mod.ts'
import { VerifyCaptcha } from '../functions/verify_captcha.ts'
import { HandleIssueMessage } from '../functions/handle_issue_message.ts'
import { UpdateContextMessage } from '../functions/update_context_message.ts'
import { GetEstablishment } from '../functions/get_establishment.ts'
import { DeleteEstablishment } from '../functions/delete_establishment.ts'

const HandleIssueWorkflow = DefineWorkflow({
  callback_id: 'handle_issue',
  title: 'Handle issue',
  description:
    'Sends a message with the issue information and actions for it. Issues generated by the App',
  input_parameters: {
    properties: {
      uuid: {
        type: Schema.types.string,
      },
      captcha: {
        type: Schema.types.string,
      },
      reason: {
        type: Schema.types.string,
      },
      reason_id: {
        type: Schema.types.string,
      },
      dev: {
        type: Schema.types.boolean,
      },
    },
    required: [
      'uuid',
      'captcha',
      'dev',
      'reason',
    ],
  },
})

HandleIssueWorkflow.addStep(
  VerifyCaptcha,
  {
    captcha: HandleIssueWorkflow.inputs.captcha,
  },
)

const establishmentStep = HandleIssueWorkflow.addStep(
  GetEstablishment,
  {
    uuid: HandleIssueWorkflow.inputs.uuid,
    environment: HandleIssueWorkflow.inputs.dev ? 'Test' : 'Production',
  },
)

const messageStep = HandleIssueWorkflow.addStep(
  HandleIssueMessage,
  {
    establishment: establishmentStep.outputs.establishment,
    environment: HandleIssueWorkflow.inputs.dev ? 'Test' : 'Production',
    reason: HandleIssueWorkflow.inputs.reason,
    reason_id: HandleIssueWorkflow.inputs.reason_id,
  },
)

HandleIssueWorkflow.addStep(
  DeleteEstablishment,
  {
    uuid: establishmentStep.outputs.establishment.uuid,
    environment: HandleIssueWorkflow.inputs.dev ? 'Test' : 'Production',
  },
)

HandleIssueWorkflow.addStep(
  UpdateContextMessage,
  {
    establishment: establishmentStep.outputs.establishment,
    message_ts: messageStep.outputs.message_ts,
    reviewer: messageStep.outputs.reviewer,
    environment: HandleIssueWorkflow.inputs.dev ? 'Test' : 'Production',
    reason: HandleIssueWorkflow.inputs.reason,
    reason_id: HandleIssueWorkflow.inputs.reason_id,
    type: 'establishment_deleted_issue',
  },
)

export default HandleIssueWorkflow
